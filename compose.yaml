
services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"

  redis:
    image: redis:8-alpine
    container_name: redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  django_server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_server
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_LOG_LEVEL=INFO
      - DJANGO_LOG_FILE=/var/log/app/app.log
      - SECRET_KEY=${SECRET_KEY}
      - TLG_BOT_TOKEN=${TLG_BOT_TOKEN}
      - TLG_CHAT_ID=${TLG_CHAT_ID}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    command: >
      bash -c "python manage.py makemigrations &&
               python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./photos:/app/photos
      - ./config:/app/config
      - ./templates:/app/templates
      - ./static:/app/static
      - ./manage.py:/app/manage.py
    ports:
      - "8000:8000"

  celery:
    build: .
    container_name: celery_worker
    depends_on:
      - redis
      - postgres
    environment:
      - DJANGO_LOG_FILE=/var/log/app/app.log
      - SECRET_KEY=${SECRET_KEY}
      - TLG_BOT_TOKEN=${TLG_BOT_TOKEN}
      - TLG_CHAT_ID=${TLG_CHAT_ID}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
    command: celery -A config worker --loglevel=info
    ports:
      - "5672:5672"
    restart: unless-stopped
    volumes:
      - ./photos/tasks:/app/photos/tasks

volumes:
  postgres-data:
  redis-data:
